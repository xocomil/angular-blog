<script lang="ts">
  import { JsonPipe } from '@angular/common' with {analog: 'imports'};
  import { NgOptimizedImage } from '@angular/common' with { analog: 'imports' };
  import { computed, inject, input, signal } from '@angular/core';
  import { toObservable, toSignal } from '@angular/core/rxjs-interop';
  import { switchMap } from 'rxjs';
  import { ArticlesService } from '../../services/articles.service';

  const articlesService = inject(ArticlesService);

  const imageHeight = signal('320px');

  defineMetadata({
    host: {
      class: 'grid overflow-y-auto max-h-full',
      '[style.--height]': 'imageHeight()'
    }
  })

  const id = input.required<string>({alias: 'articleId'});
  const article = toSignal(toObservable(id).pipe(
    switchMap(id => articlesService.getArticle(id, [1536, 320]))
  ));
  const articleImageUrl = computed(() => {
    const imageUrl = article()?.imageUrl;

    return imageUrl ?? 'test';
  });
  const size = nextSize();

  function resize() {
    const newSize = size.next().value;

    console.log('resize', newSize);

    if(newSize) {
      imageHeight.set(newSize);
    }
  }

  function *nextSize() {
    while(true) {
      yield '240px';
      yield '160px';
      yield '320px';
    }
  }
</script>

<template>
  <div class="image">
    <img
      [ngSrc]="articleImageUrl()"
      width="1536"
      height="320"
      priority="true"
      class="w-full h-full object-cover"
      (click)="resize()"
    />
  </div>
  <div class="title"></div>
  <div class="content overflow-x-auto">
    <pre>{{ article() | json }}</pre>
  </div>
</template>

<style>
  :host {
      grid-template-columns: [left-edge] 2em [left-bleed] 1fr [right-bleed] 2em [right-edge];
      grid-template-rows: var(--height) 150px 1fr;
      gap: 1em 1em;
      grid-template-areas:
    "image image image"
    ". title ."
    ". content .";

    .image { grid-area: image; background: hsl(120deg 100 50/.3); }

    .title { grid-area: title; background: red; }

    .content {
      grid-area: content;
      background: blue;
      min-height: 1000px;
    }
  }
</style>
